#include<bits/stdc++.h>#include<ext/pb_ds/assoc_container.hpp>#include<ext/pb_ds/tree_policy.hpp>using namespace std;using namespace __gnu_pbds;typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; int main(){	// freopen("addin.txt","r",stdin);	// freopen("addout.txt","w",stdout);    ios_base::sync_with_stdio(0);  cin.tie(NULL);   cout.tie(NULL);  pbds S;  int t;  cin>>t;  int temp = 1;  while(t--){  	int n,a,b;  	cin>>n>>a>>b;  	vector<int> v(n+1);  	for(int i=0;i<n;i++){  		int t;  		cin>>t;  		v[t]++;  	}  	int ta = 1;		if(temp%2 == 1){			for(int i=0;i<n;i++){				if(v[ta*a] == 0){					cout<<"ALICE"<<endl;					break;				}else if(v[ta*b] == 0){					cout<<"BOB"<<endl;					break;				}				ta++;			}		}else{			for(int i=0;i<n;i++){				if(v[ta*b] == 0){					cout<<"BOB"<<endl;					break;				}else if(v[ta*a] == 0){					cout<<"ALICE"<<endl;					break;				}				ta++;			}		}  	temp++;  }		return 0;}